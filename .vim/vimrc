" for changes to take effect, run ':so %'

" If you create your own .vimrc, it is recommended to add these lines somewhere near the top. Then Vim works like before you had a .vimrc.
unlet! skip_defaults_vim
source $VIMRUNTIME/defaults.vim

""""""""""""""""""""""""""""""
" Theme
""""""""""""""""""""""""""""""
" To see a list of ready-to-use themes,
" :colorscheme [space] [Ctrl+d]
" colorscheme torte
packadd! onedark.vim
if has("termguicolors")
  set termguicolors
endif
let g:onedark_color_overrides = {
  \ "background": {"gui": "#131313", "cterm": "233", "cterm16": "0" },
  \ "purple": { "gui": "#C678DF", "cterm": "170", "cterm16": "5" }
  \}
colorscheme onedark
" loads all plugins?
packloadall

"""""""""""""""""""""""""""
" Shortcuts
"""""""""""""""""""""""""""
" map leader key to space
let mapleader = " "
" map jk to esc
imap jk <Esc>
" save file in insert mode with ยง
inoremap ยง <C-O>:w<CR>
" a shortcut for opening/closing folds
nnoremap <leader>f za
" run current script
nnoremap <leader>r :! clear && ./% <return>
" run cursor blinking fix
nnoremap <leader>b :! tput cvvis <return>
autocmd VimEnter * :! tput cvvis
" visual-block mode ctrl+v remap fix
nnoremap <leader>v <c-v>
" un/comment line with #
nnoremap gc 0i#<Esc>
nnoremap gu 0x
" run prettier on
nmap <Leader>p <Plug>(Prettier)
" clear search highlight
nnoremap <leader>c :nohlsearch <return>
" Leader dd: Will open Netrw in the directory of the current file
nnoremap <leader>dd :Lexplore %:p:h<CR>
" Leader da: Will open Netrw in the current working directory
nnoremap <Leader>da :Lexplore<CR>

"""""""""""""""""""""""""""""""""""""
" Indents
"""""""""""""""""""""""""""""""""""""
" replace tabs with spaces
set expandtab
" 1 tab = 2 spaces
set tabstop=2 shiftwidth=2

" when deleting whitespace at the beginning of a line, delete
" 1 tab worth of spaces (for us this is 2 spaces)
set smarttab

" when creating a new line, copy the indentation from the line above
set autoindent

set relativenumber
"""""""""""""""""""""""""""""""""""""
" Search
"""""""""""""""""""""""""""""""""""""
" Ignore case when searching
set ignorecase
set smartcase

" highlight search results (after pressing Enter)
set hlsearch

"""""""""""""""""""""""""""""""""""""
" Netrw
"""""""""""""""""""""""""""""""""""""
" hide netrw banner, toggle with <shift-i>
let g:netrw_banner = 0

"""""""""""""""""""""""""""""""""""""
" Mix
"""""""""""""""""""""""""""""""""""""
" Show a few lines of context around the cursor
set scrolloff=3

" show line numbers
set number
" show the mathing brackets
set showmatch
" highlight current line
set cursorline

" Always display the status line, even if only one window is displayed
set laststatus=2

" Enable use of the mouse for all modes
if has('mouse')
  set mouse=a
endif

" Set the command window height to 2 lines, to avoid many cases of having to "press <Enter> to continue"
set cmdheight=2

" allows folding code blocks for easier navigation through the code.
set foldenable

" Location of swap files
" // means that the directory information will be saved in the filename
set directory=/tmp//
set backupdir=/tmp//
set undodir=/tmp//

" Highlight echo in red to avoid using it
highlight Sloppy guibg=darkred guifg=white
"syn keyword Sloppy echo
match Sloppy /echo/

" Show trailing whitespace:
highlight ExtraWhitespace guibg=lightred
call matchadd("ExtraWhitespace",'\s\+$')

" Cursor is on a character that has actual place in a buffer. After the last character there is no actual place to put cursor on. Unless you use virtual place, some external plugins might become break with this
set virtualedit+=onemore

" WSL yank support
let s:clip = '/c/Windows/System32/clip.exe'
if executable(s:clip)
  augroup WSLYank
    autocmd!
    autocmd TextYankPost * if v:event.operator ==# 'y' | call system(s:clip, @0) | endif
  augroup END
endif

